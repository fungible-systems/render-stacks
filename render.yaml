services:
  # stacks-blockchain-api instance
  - name: testnet-stacks-blockchain
    type: web
    env: docker
    region: oregon # optional (defaults to oregon)
    plan: standard # optional (defaults to starter)
    branch: testnet-render 
    dockerfilePath: standalone.Dockerfile
    dockerContext: .
    # dockerCommand: /start
    healthCheckPath: /status
    envVars:
      - key: PG_HOST
        fromService:
          name: testnet-postgres
          type: pserv
          property: host
      - key: PG_PORT
        value: 5432
      - key: PG_USER
        value: postgres
      - key: PG_PASSWORD
        fromService:
          type: pserv
          name: testnet-postgres
          envVarKey: POSTGRES_PASSWORD
      - key: PG_DATABASE
        value: postgres
      ##
      ##  To use manageded DB connection settings - higher priced plans would be required (at a minimum $20 per month/db)
      ## 
      # - key: PG_HOST
      #   fromDatabase:
      #     name: testnet-postgres
      #     property: host
      # - key: PG_PORT
      #   fromDatabase:
      #     name: testnet-postgres
      #     property: port
      # - key: PG_DATABASE
      #   fromDatabase:
      #     name: testnet-postgres
      #     property: database
      # - key: PG_USER
      #   fromDatabase:
      #     name: testnet-postgres
      #     property: user
      # - key: PG_PASSWORD
      #   fromDatabase:
      #     name: testnet-postgres
      #     property: password
      - key: STACKS_CORE_EVENT_PORT
        value: 3700
      - key: STACKS_CORE_EVENT_HOST
        value: 0.0.0.0
      - key: STACKS_BLOCKCHAIN_API_PORT
        value: 3999
      - key: STACKS_BLOCKCHAIN_API_HOST
        value: 0.0.0.0
      - key: STACKS_BLOCKCHAIN_API_DB
        value: pg
      - key: STACKS_CORE_RPC_HOST
        value: localhost
      - key: STACKS_CORE_RPC_PORT
        value: 20443
      - fromGroup: testnet-settings
    disk:
      name: stacks-blockchain-data
      mountPath: /root/stacks-blockchain/data
      sizeGB: 50 # optional

  # Private Postgres instance
  - name: testnet-postgres
    type: pserv
    env: docker
    region: oregon # optional (defaults to oregon)
    plan: standard # optional (defaults to starter)
    branch: testnet-render
    dockerfilePath: postgres.Dockerfile
    envVars:
      - key: POSTGRES_PASSWORD
        generateValue: true # will generate a base64-encoded 256-bit secret
    disk:
      name: postgres-data
      mountPath: /var/lib/postgresql/data
      sizeGB: 10 # optional

# Managed postgres instance
# databases:
#   - name: testnet-postgres
#     databaseName: testnet # optional (Render may add a suffix)
#     user: testnet # optional
#     ipAllowList: []

envVarGroups:
  - name: testnet-settings
    envVars:
      - key: NODE_ENV
        value: production
      - key: GIT_TAG
        value: master
      - key: STACKS_CHAIN_ID
        value: 0x80000000
      - key: V2_POX_MIN_AMOUNT_USTX
        value: 90000000260
      - key: STACKS_NETWORK
        value: testnet
      # - key: STACKS_EXPORT_EVENTS_FILE
      #   value: /tmp/event-replay/stacks-node-events.tsv
      # - key: BNS_IMPORT_DIR
      #   value: /bns-data

 
